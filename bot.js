import { Telegraf, Markup } from 'telegraf';
import { MongoClient } from 'mongodb';

const bot = new Telegraf('7155688956:AAE2aIAK5HWZBU4ibCj5ZXGv7VPldSnnhzw');
const adminId = 6375865271;

let collection;
let logChannelId = null; // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∫–∞–Ω–∞–ª–∞ —Å –ª–æ–≥–∞–º–∏

const url = "mongodb+srv://KLB2:IyRYJ4itur10@klb.wqnns.mongodb.net/";
const mongoClient = new MongoClient(url);

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
(async () => {
  try {
    await mongoClient.connect();
    const usersdb = mongoClient.db('KLB'); 
    collection = usersdb.collection('Users'); 
    console.log('\x1b[32m%s\x1b[0m', '[–°–ò–°–¢–ï–ú–ê - –£–°–ü–ï–•] MongoDB –±—ã–ª–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∞–¥–º–∏–Ω
    const adminExists = await collection.findOne({ user_id: adminId });
    if (!adminExists) {
      await collection.insertOne({
        user_id: adminId,
        username: 'ItsLife', // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ç–≤–æ–π –Ω–∏–∫
        role: 'Creator', // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        registration_date: new Date(),
      });
      console.log('[–°–ò–°–¢–ï–ú–ê - –£–°–ü–ï–•] –ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.');
    } else if (adminExists.role !== 'Creator') {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –æ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ
      await collection.updateOne(
        { user_id: adminId },
        { $set: { role: 'Creator' } }
      );
      console.log('[–°–ò–°–¢–ï–ú–ê - –£–°–ü–ï–•] –†–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.');
    }
  } catch (e) {
    console.error('\x1b[31m%s\x1b[0m', `[–°–ò–°–¢–ï–ú–ê - –û–®–ò–ë–ö–ê] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MongoDB: ${e.message}\n${e.stack}`, e);
  }
})();

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
function logAction(ctx, command) {
  if (logChannelId) {
    const message = `[–õ–û–ì–ò] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${ctx.from.username} (${ctx.from.id}) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É: ${command} –≤ ${new Date().toLocaleString()}`;
    bot.telegram.sendMessage(logChannelId, message);
  }
}

// –ü—Ä–∏–≤—è–∑–∫–∞ –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è Creator, Code –∏ Admin)
bot.command('connectchanel', async (ctx) => {
  const member = await bot.telegram.getChatMember(ctx.chat.id, ctx.from.id);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  const user = await collection.findOne({ user_id: ctx.from.id });

  if (!user) {
    return ctx.reply('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.');
  }

  if (!['Creator', 'Code', 'Admin'].includes(user.role)) {
    return ctx.reply('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ä–æ–ª—å, —Ç–æ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤
  logChannelId = ctx.chat.id;
  ctx.reply('–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ª–æ–≥–æ–≤.');
});

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
bot.use((ctx, next) => {
  if (ctx.message && ctx.message.text) {
    logAction(ctx, ctx.message.text);
  }
  return next();
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.command('start', async (ctx) => {
  if (!collection) return ctx.reply('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞.');
  
  const userId = ctx.from.id;
  const userExists = await collection.findOne({ user_id: userId });

  if (!userExists) {
    await collection.insertOne({
      user_id: userId,
      username: ctx.from.username,
      role: '–ò–≥—Ä–æ–∫',
      registration_date: new Date(),
    });
    ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${ctx.from.username}!`);
  } else {
    ctx.reply('–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.');
  }    
});

// –ö–æ–º–∞–Ω–¥–∞ /setrole —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Custom Title
bot.command('setrole', async (ctx) => {
  const args = ctx.message.text.split(' ');
  if (args.length < 3) {
    return ctx.reply('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setrole [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [—Ä–æ–ª—å], –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑ []');
  }

  const username = args[1].replace('@', ''); // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ "@"
  const role = args[2];

  const roles = {
    'Creator': '–°–æ–∑–¥–∞—Ç–µ–ª—å',
    'Code': '–ö–æ–¥–µ—Ä',
    'Curator': '–ö—É—Ä–∞—Ç–æ—Ä',
    'Admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    'Eventer': '–ö–æ–Ω–∫—É—Ä—Å–æ–≤–æ–¥',
  };

  if (!roles[role]) {
    return ctx.reply('–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å. –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–æ–ª–∏: Creator (–°–æ–∑–¥–∞—Ç–µ–ª—å), Code (–ö–æ–¥–µ—Ä), Curator (–ö—É—Ä–∞—Ç–æ—Ä), Admin (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä), Eventer (–ö–æ–Ω–∫—É—Ä—Å–æ–≤–æ–¥)');
  }

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å —Ç–æ–≥–æ, –∫—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É
    const caller = await collection.findOne({ user_id: ctx.from.id });

    if (caller.role !== 'Admin' && caller.role !== 'Creator' && caller.role !== 'Code') {
      return ctx.reply('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    }

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
    const user = await collection.findOne({ username: username });
    if (!user) {
      return ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');
    }

    // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–æ–ª—å –∏ –≤—ã–¥–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await collection.updateOne(
      { username: username },
      { $set: { role: role } }
    );

    // –í—ã–¥–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Custom Title
    await bot.telegram.promoteChatMember(ctx.chat.id, user.user_id, {
      can_manage_chat: true,
      can_post_messages: true,
      can_edit_messages: true,
      can_delete_messages: true,
      can_invite_users: true,
      can_restrict_members: true,
      can_pin_messages: true,
      can_promote_members: true
    });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Custom Title
    await bot.telegram.setChatAdministratorCustomTitle(ctx.chat.id, user.user_id, roles[role]);

    ctx.reply(`–†–æ–ª—å "${role}" –∏ –ü—Ä–µ—Ñ–∏–∫—Å "${roles[role]}" –≤—ã–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @${username}`);
  } catch (error) {
    console.error(error);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏ –∏ –ø—Ä–µ—Ñ–∏–∫—Å–∞.');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞
bot.hears('/post', async (ctx) => {
  if (ctx.chat.type !== 'private') {
    ctx.reply('–ö–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.');
    return;
  }

  const userRole = await collection.findOne({ user_id: ctx.from.id }, { projection: { role: 1 } });

  if (!['Eventer', 'Admin', 'Curator'].includes(userRole.role)) {
    ctx.reply('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    return;
  }

  ctx.telegram.sendMessage('-1002151634059',
    '–í–ù–ò–ú–ê–ù–ò–ï‚ùó–ö–û–ù–ö–£–†–° \n\nüí∏ –§–æ–Ω–¥ „Äã„Äã„Äã1.500.000.000.000.000+9 –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤üí∏ \n\n‚ú®–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 3‚ú®\n\n500.000.000.000.000+–ø—Ä–æ–º–æ –Ω–∞ –≤—ã–±–æ—Ä (3—à—Ç)\n500.000.000.000.000+–ø—Ä–æ–º–æ –Ω–∞ –≤—ã–±–æ—Ä (3—à—Ç)\n500.000.000.000.000+–ø—Ä–æ–º–æ –Ω–∞ –≤—ã–±–æ—Ä (3—à—Ç)\n\n‚ùó–£—Å–ª–æ–≤–∏—è –∫–æ–Ω–∫—É—Ä—Å–∞: \n\nüñ§–ù–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å". \nü§ç–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É\nüíõ–ò–º–µ—Ç—å –Ω–µ —Å–∫—Ä—ã—Ç—ã–π —é–∑–µ—Ä –Ω–µ–π–º \n\n‚è≥–ò—Ç–æ–≥–∏ —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞', {
    reply_markup: { inline_keyboard: [[{ text: `–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å`, callback_data: `participate` }]] }
  }).catch((error) => {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID –≥—Ä—É–ø–ø—ã –∏ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞.');
  });

  ctx.reply('–ü–æ—Å—Ç –≤—ã–ª–æ–∂–µ–Ω –≤ "https://t.me/hfvuv678"', {
    reply_markup: Markup.inlineKeyboard([
      Markup.button.callback('–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å', 'participate')
    ])
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—á–∞—Å—Ç–∏—è –≤ –∫–æ–Ω–∫—É—Ä—Å–µ
bot.action('participate', (ctx) => {
  return ctx.answerCbQuery(`–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!`);
});

// –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
const startBot = async () => {
  try {
    await bot.launch();
    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
    setTimeout(startBot, 1000);
  }
};

startBot();
